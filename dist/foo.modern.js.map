{"version":3,"file":"foo.modern.js","sources":["../src/foo.js"],"sourcesContent":["// export default async function makeDom(tag, props, children) {\n//   let el = document.createElement(tag);\n//   el.append(...(await children));\n//   return Object.assign(el, props);\n// }\n\n// export const transformNullToString = (value) => {\n//   if (typeof value === \"number\") return value.toString();\n//   if (!value || value === \".\") return \"\";\n//   return value.toString();\n// };\n\n// export const amountToThousandSeparator = (value) => {\n//   console.log(\"PRITAM\", value);\n//   return transformNullToString(value)\n//     .replace(/\\D/g, \"\")\n//     .replace(/(\\d+?)(?=(\\d\\d)+(\\d)(?!\\d))(\\.\\d+)?/g, \"$1, \");\n// };\n\n// export default function toUpperCaseTest(value) {\n//   const result = value.toUpperCase();\n//   return result;\n// }\n\nconst transformNullToString = (value) => {\n  if (typeof value === \"number\") return value.toString();\n  if (!value || value === \".\") return \"\";\n  return value.toString();\n};\n\nconst amountToThousandSeparator = (value) => {\n  console.log(result);\n  const result = transformNullToString(value)\n    .replace(/\\D/g, \"\")\n    .replace(/(\\d+?)(?=(\\d\\d)+(\\d)(?!\\d))(\\.\\d+)?/g, \"$1, \");\n\n  return result;\n};\n\nexport default { transformNullToString, amountToThousandSeparator };\n"],"names":["transformNullToString","value","toString","foo","amountToThousandSeparator","console","log","result","replace"],"mappings":"AAwBA,MAAMA,EAAyBC,GACR,iBAAVA,GACNA,GAAmB,MAAVA,EADwBA,EAAMC,WACR,GAatC,IAAAC,EAAe,CAAEH,sBAAAA,EAAuBI,0BATLH,IACjCI,QAAQC,IAAIC,GACZ,MAAMA,EAASP,EAAsBC,GAClCO,QAAQ,MAAO,IACfA,QAAQ,uCAAwC,QAEnD,OAAOD"}